name: Continuous

on: [push]

jobs:

  linux-mac:
    strategy:
      matrix:
        cfg: [{os: ubuntu-latest, cxx: g++-12},
              # {os: ubuntu-latest, cxx: g++-9},
              # get clang 16 ! because we need C++20 support
              {os: macos-latest, cxx: /opt/homebrew/opt/llvm@16/bin/clang++}] 
        config: [Release, Debug]

    runs-on:  ${{ matrix.cfg.os }}

    env:
      CXX: ${{ matrix.cfg.cxx }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install Clang 16 (macOS)
      if: matrix.cfg.os == 'macos-latest'
      run: |
        brew install llvm@16

    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.config }}

    - name: CMake Build
      run: cmake --build build --parallel

    - name: Run
      run: cd build/examples && ./create_tri_mesh


  windows-msvc:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Configure CMake
      run: cmake -B build

    - name: Release build
      run: cmake --build build --parallel --config Release

    - name: Run release
      run: build\examples\Release\create_tri_mesh.exe

    - name: Run release
      run: build\examples\Release\create_fill_attributes.exe
      
    - name: Debug build
      run: cmake --build build --parallel --config Debug

    - name: Run debug
      run: build\examples\Debug\create_tri_mesh.exe
